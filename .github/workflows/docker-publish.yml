name: Publish Docker image

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Touch APP_ENV
        run: echo "APP_ENV=test" > .env

      - uses: php-actions/composer@v6
        env:
          APP_ENV: test
        with:
          args: --ignore-platform-reqs --no-scripts --no-interaction

      - name: PHPStan Static Analysis
        uses: php-actions/phpstan@v3
        with:
          configuration: phpstan.neon
          memory_limit: 256M

      - name: PHPUnit tests
        uses: php-actions/phpunit@v3
        with:
          php_extensions: xdebug curl mysqli pdo_pgsql mbstring gd exif mcrypt imagick smbclient
          configuration: phpunit.xml

  build-and-push:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Extract tag name
        id: prep
        run: echo "::set-output name=tag_version::${GITHUB_REF#refs/tags/v}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/slink:${{ steps.prep.outputs.tag_version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/slink:latest
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max